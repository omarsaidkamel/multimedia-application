androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.android.exoplayer2.ui.SubtitleView
com.google.android.exoplayer2.ui.PlayerControlView: int getRepeatToggleModes()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State valueOf(java.lang.String)
com.google.android.exoplayer2.ui.TrackSelectionView: void setTrackNameProvider(com.google.android.exoplayer2.ui.TrackNameProvider)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.google.android.exoplayer2.ui.StyledPlayerView: com.google.android.exoplayer2.Player getPlayer()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.flutter.plugins.GeneratedPluginRegistrant
com.google.android.exoplayer2.ui.PlayerView: void setControllerHideDuringAds(boolean)
com.google.android.exoplayer2.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,byte[],int)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerHideOnTouch(boolean)
androidx.versionedparcelable.ParcelImpl
com.google.android.exoplayer2.metadata.icy.IcyInfo: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView: void setSingleTapListener(com.google.android.exoplayer2.ui.spherical.SingleTapListener)
com.google.android.exoplayer2.ui.TrackSelectionView: void setAllowAdaptiveSelections(boolean)
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.PlayerView: android.view.ViewGroup getAdViewGroup()
com.google.android.exoplayer2.ui.PlayerControlView: com.google.android.exoplayer2.Player getPlayer()
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.work.impl.background.systemalarm.SystemAlarmService
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.exoplayer2.ui.SubtitleView: void setView(android.view.View)
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.PlayerView: boolean getControllerAutoShow()
com.google.android.exoplayer2.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.PlayerView: void setUseController(boolean)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
xyz.luan.audioplayers.ReleaseMode: xyz.luan.audioplayers.ReleaseMode valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.work.ListenableWorker
io.flutter.view.FlutterCallbackInformation
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri buildRawResourceUri(int)
com.jhomlala.better_player.CacheWorker: CacheWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setAspectRatio(float)
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.android.exoplayer2.video.ColorInfo: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowShuffleButton(boolean)
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerVisibilityListener(com.google.android.exoplayer2.ui.StyledPlayerControlView$VisibilityListener)
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setAnimationEnabled(boolean)
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.StyledPlayerControlView: boolean getShowSubtitleButton()
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
com.google.android.exoplayer2.ui.PlayerControlView: void setShowNextButton(boolean)
androidx.work.impl.workers.DiagnosticsWorker
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowMultiWindowTimeBar(boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: int getResizeMode()
com.google.android.exoplayer2.ui.PlayerView: void setControllerAutoShow(boolean)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.android.exoplayer2.ui.PlayerControlView: void setShowShuffleButton(boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.work.impl.foreground.SystemForegroundService
com.google.android.exoplayer2.ui.PlayerControlView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.recyclerview.widget.RecyclerView
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,byte[])
com.jhomlala.better_player.ImageWorker: ImageWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.exoplayer2.ui.StyledPlayerView: boolean getControllerAutoShow()
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
com.google.android.exoplayer2.metadata.id3.MlltFrame: android.os.Parcelable$Creator CREATOR
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.google.android.exoplayer2.ui.PlayerControlView: void setShowVrButton(boolean)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.google.android.exoplayer2.ui.SubtitleView: void setStyle(com.google.android.exoplayer2.text.CaptionStyleCompat)
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
androidx.work.NetworkType: androidx.work.NetworkType[] values()
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: AspectRatioFrameLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.media.session.MediaSessionCompat$QueueItem
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.core.graphics.drawable.IconCompat
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerShowTimeoutMs(int)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: DashMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
com.google.android.exoplayer2.ui.PlayerControlView: boolean getShowVrButton()
com.google.android.exoplayer2.ui.StyledPlayerControlView
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.work.impl.WorkManagerInitializer
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
androidx.media.AudioAttributesImpl
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.exoplayer2.ui.PlayerView: void setShutterBackgroundColor(int)
com.google.android.exoplayer2.offline.StreamKey: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice valueOf(java.lang.String)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
com.google.android.exoplayer2.ui.PlayerView: void setKeepContentOnPlayerReset(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.StyledPlayerView: boolean getUseController()
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowFastForwardButton(boolean)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: SsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
com.google.android.exoplayer2.ui.StyledPlayerView
com.google.android.exoplayer2.ui.PlayerControlView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
com.google.android.exoplayer2.ui.TrackSelectionView
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setProgressUpdateListener(com.google.android.exoplayer2.ui.StyledPlayerControlView$ProgressUpdateListener)
com.google.android.exoplayer2.ui.StyledPlayerView: boolean getUseArtwork()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
com.google.android.exoplayer2.ui.PlayerControlView: void setFastForwardIncrementMs(int)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.google.android.exoplayer2.ui.PlayerView: int getControllerShowTimeoutMs()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.work.impl.workers.CombineContinuationsWorker
androidx.lifecycle.ReflectiveGenericLifecycleObserver
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView
androidx.recyclerview.widget.LinearLayoutManager
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.core.app.CoreComponentFactory
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
io.flutter.embedding.engine.FlutterJNI: void attachToNative(boolean)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
androidx.work.impl.background.systemjob.SystemJobService
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.android.exoplayer2.ui.StyledPlayerView: int getControllerShowTimeoutMs()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.MediaBrowserCompat$ItemReceiver
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
com.google.android.exoplayer2.ui.PlayerView: void setErrorMessageProvider(com.google.android.exoplayer2.util.ErrorMessageProvider)
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.core.app.RemoteActionCompatParcelizer
com.google.android.exoplayer2.ui.StyledPlayerView: void setResizeMode(int)
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setPlayer(com.google.android.exoplayer2.Player)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.lifecycle.CompositeGeneratedAdaptersObserver
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.google.android.exoplayer2.ui.PlayerView: android.view.View getVideoSurfaceView()
androidx.work.ArrayCreatingInputMerger
com.google.android.exoplayer2.ui.StyledPlayerControlView: int getShowTimeoutMs()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.android.exoplayer2.ui.PlayerView: boolean getControllerHideOnTouch()
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.work.impl.WorkManagerInitializer: WorkManagerInitializer()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowFastForwardButton(boolean)
com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata: android.os.Parcelable$Creator CREATOR
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator[] values()
com.google.android.exoplayer2.metadata.Metadata: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.PlayerView
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.google.android.exoplayer2.ui.SubtitleView: void setApplyEmbeddedStyles(boolean)
com.google.android.exoplayer2.ui.StyledPlayerView: android.view.ViewGroup getAdViewGroup()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
com.google.android.exoplayer2.metadata.flac.PictureFrame: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.media.AudioAttributesCompatParcelizer
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
com.example.multimedia.MainActivity: MainActivity()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.versionedparcelable.CustomVersionedParcelable
com.google.android.exoplayer2.ui.TrackSelectionView: TrackSelectionView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.google.android.exoplayer2.ui.PlayerView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.google.android.exoplayer2.ui.PlayerView: void setShowShuffleButton(boolean)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.lifecycle.FullLifecycleObserverAdapter
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowVrButton(boolean)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.embedding.android.FlutterImageView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.google.android.exoplayer2.ui.StyledPlayerView: void setCustomErrorMessage(java.lang.CharSequence)
com.google.android.exoplayer2.ui.TrackSelectionView: void setAllowMultipleOverrides(boolean)
com.google.android.exoplayer2.ui.PlayerView: android.view.View[] getAdOverlayViews()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.embedding.android.FlutterTextureView
android.support.v4.media.MediaDescriptionCompat
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.google.android.exoplayer2.ui.PlayerView: void setUseArtwork(boolean)
com.google.android.exoplayer2.ui.PlayerView: com.google.android.exoplayer2.ui.SubtitleView getSubtitleView()
androidx.lifecycle.LifecycleService: LifecycleService()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: HlsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
com.google.android.exoplayer2.ui.StyledPlayerView: void setUseSensorRotation(boolean)
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerOnFullScreenModeChangedListener(com.google.android.exoplayer2.ui.StyledPlayerControlView$OnFullScreenModeChangedListener)
com.google.android.exoplayer2.ui.StyledPlayerView: android.view.View getVideoSurfaceView()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.exoplayer2.ui.StyledPlayerView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.google.android.exoplayer2.ui.PlayerView: int getResizeMode()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.google.android.exoplayer2.ui.PlayerView: void setDefaultArtwork(android.graphics.drawable.Drawable)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowShuffleButton(boolean)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
android.support.v4.media.RatingCompat
androidx.activity.ComponentActivity$2
androidx.work.impl.WorkDatabase: WorkDatabase()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.google.android.exoplayer2.ui.SubtitleView: void setCues(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
xyz.luan.audioplayers.ReleaseMode: xyz.luan.audioplayers.ReleaseMode[] values()
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowRewindButton(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setVrButtonListener(android.view.View$OnClickListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowMultiWindowTimeBar(boolean)
com.google.android.exoplayer2.ui.SubtitleView: SubtitleView(android.content.Context,android.util.AttributeSet)
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: boolean setRefreshRateFPSCalled
androidx.work.impl.diagnostics.DiagnosticsReceiver
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.exoplayer2.ui.StyledPlayerView: boolean getControllerHideOnTouch()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.core.content.FileProvider: FileProvider()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.google.android.exoplayer2.ui.PlayerControlView: void setPlayer(com.google.android.exoplayer2.Player)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.google.android.exoplayer2.drm.DrmInitData: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.mp4.SlowMotionData$Segment: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice[] values()
androidx.annotation.Keep
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
com.google.android.exoplayer2.ui.PlayerView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowTimeoutMs(int)
androidx.activity.ImmLeaksCleaner
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.android.exoplayer2.ui.PlayerView: com.google.android.exoplayer2.Player getPlayer()
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
androidx.media.AudioAttributesImplBaseParcelizer
com.google.android.exoplayer2.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView: void setDefaultStereoMode(int)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.ui.StyledPlayerView: java.util.List getAdOverlayInfos()
io.flutter.embedding.engine.FlutterJNI
android.support.v4.media.session.PlaybackStateCompat
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.google.android.exoplayer2.ui.PlayerView: void setVisibility(int)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$CustomAction
io.flutter.view.AccessibilityViewEmbedder
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.exoplayer2.ui.SubtitleView: void setViewType(int)
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.android.exoplayer2.ui.PlayerControlView: boolean getShowShuffleButton()
com.google.android.exoplayer2.ui.TrackSelectionView: boolean getIsDisabled()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.media.AudioAttributesImplApi21
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.google.android.exoplayer2.ui.StyledPlayerView: void setUseController(boolean)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.fragment.app.Fragment$2
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.google.android.exoplayer2.source.TrackGroupArray: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.TrackSelectionView: java.util.List getOverrides()
com.google.android.exoplayer2.upstream.RawResourceDataSource
com.google.android.exoplayer2.ui.PlayerView: void setControllerShowTimeoutMs(int)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setRepeatToggleModes(int)
com.google.android.exoplayer2.ui.PlayerView: void setShowMultiWindowTimeBar(boolean)
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerAutoShow(boolean)
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowNextButton(boolean)
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowSubtitleButton(boolean)
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.google.android.exoplayer2.source.TrackGroup: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.android.exoplayer2.video.VideoDecoderGLSurfaceView: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer getVideoDecoderOutputBufferRenderer()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.android.exoplayer2.ui.PlayerView: void setControllerHideOnTouch(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.exoplayer2.ui.PlayerView: android.widget.FrameLayout getOverlayFrameLayout()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setPlaybackSpeed(float)
com.google.android.exoplayer2.ui.StyledPlayerView: android.graphics.drawable.Drawable getDefaultArtwork()
io.flutter.plugins.imagepicker.ImagePickerFileProvider
androidx.work.impl.WorkDatabase_Impl
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.work.impl.WorkDatabase
com.google.android.exoplayer2.ui.StyledPlayerControlView: int getRepeatToggleModes()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.google.android.exoplayer2.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
androidx.core.app.RemoteActionCompat
com.google.android.exoplayer2.video.VideoDecoderGLSurfaceView
com.google.android.exoplayer2.ui.PlayerView: java.util.List getAdOverlayInfos()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.google.android.exoplayer2.ui.PlayerView: void setShowBuffering(int)
com.google.android.exoplayer2.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.TrackSelectionView: void setShowDisableOption(boolean)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.exoplayer2.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.mp4.SmtaMetadataEntry: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.savedstate.SavedStateRegistry$1
com.google.android.exoplayer2.ui.SubtitleView: float getUserCaptionFontScale()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.lifecycle.DefaultLifecycleObserver
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.ui.SubtitleView: void setBottomPaddingFraction(float)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.exoplayer2.ui.PlayerView: void setUseSensorRotation(boolean)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.exoplayer2.ui.PlayerControlView: void setVrButtonListener(android.view.View$OnClickListener)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.lifecycle.Lifecycling$1
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.google.android.exoplayer2.ui.StyledPlayerView: void setVisibility(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.recyclerview.widget.GridLayoutManager
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.google.android.exoplayer2.ui.SubtitleView: void setApplyEmbeddedFontSizes(boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
androidx.work.impl.workers.ConstraintTrackingWorker
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.google.android.exoplayer2.ui.PlayerControlView
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
android.support.v4.media.AudioAttributesImplApi21Parcelizer
com.google.android.exoplayer2.ui.StyledPlayerControlView: boolean getShowShuffleButton()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
com.google.android.exoplayer2.ui.PlayerView: void setRepeatToggleModes(int)
android.support.v4.graphics.drawable.IconCompatParcelizer
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowVrButton(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String)
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.google.android.exoplayer2.ui.SubtitleView: java.util.List getCuesWithStylingPreferencesApplied()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: android.os.Parcelable$Creator CREATOR
androidx.media.AudioAttributesImplApi26Parcelizer
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$Token
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
com.google.android.exoplayer2.ui.PlayerView: void setShowRewindButton(boolean)
com.jhomlala.better_player.CacheWorker
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.google.android.exoplayer2.ui.SubtitleView: void setFractionalTextSize(float)
com.google.android.exoplayer2.ui.PlayerView: void setPlayer(com.google.android.exoplayer2.Player)
com.google.android.exoplayer2.ui.PlayerView: void setControllerVisibilityListener(com.google.android.exoplayer2.ui.PlayerControlView$VisibilityListener)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.exoplayer2.ui.StyledPlayerView: void setRepeatToggleModes(int)
com.google.android.exoplayer2.ui.StyledPlayerControlView: boolean getShowVrButton()
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] values()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
android.support.v4.media.session.ParcelableVolumeInfo
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.google.android.exoplayer2.ui.PlayerView: boolean getUseController()
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.google.android.exoplayer2.ui.StyledPlayerView: android.view.View[] getAdOverlayViews()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.google.android.exoplayer2.ui.StyledPlayerControlView: com.google.android.exoplayer2.Player getPlayer()
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowNextButton(boolean)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
androidx.room.MultiInstanceInvalidationService
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.PlayerControlView: void setProgressUpdateListener(com.google.android.exoplayer2.ui.PlayerControlView$ProgressUpdateListener)
com.google.android.exoplayer2.ui.PlayerView: void setAspectRatioListener(com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener)
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView: void setUseSensorRotation(boolean)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
androidx.savedstate.Recreator
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.media.AudioAttributesImplApi21Parcelizer
com.google.android.exoplayer2.ui.StyledPlayerView: void setPlayer(com.google.android.exoplayer2.Player)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout
com.google.android.exoplayer2.ui.SubtitleView: com.google.android.exoplayer2.text.CaptionStyleCompat getUserCaptionStyle()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView: void setVideoComponent(com.google.android.exoplayer2.Player$VideoComponent)
com.google.android.exoplayer2.ui.PlayerView: void setShowPreviousButton(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.google.android.exoplayer2.ui.StyledPlayerView: void setDefaultArtwork(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.google.android.exoplayer2.ui.PlayerView: void setRewindIncrementMs(int)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.google.android.exoplayer2.ui.PlayerControlView: void setShowFastForwardButton(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
com.google.android.exoplayer2.ui.PlayerView: void setShowFastForwardButton(boolean)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
androidx.work.Worker
com.google.android.exoplayer2.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.PlayerView: android.graphics.drawable.Drawable getDefaultArtwork()
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowPreviousButton(boolean)
com.google.android.exoplayer2.ui.StyledPlayerView: void setPlaybackPreparer(com.google.android.exoplayer2.PlaybackPreparer)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setResizeMode(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager
androidx.media.AudioAttributesCompat
com.google.android.exoplayer2.ui.StyledPlayerView: int getResizeMode()
com.google.android.exoplayer2.ui.PlayerView: void setShowNextButton(boolean)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
android.support.v4.media.MediaMetadataCompat
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.media.AudioAttributesImplBase
androidx.work.OverwritingInputMerger
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.google.android.exoplayer2.ui.StyledPlayerView: void setUseArtwork(boolean)
com.google.android.exoplayer2.ui.PlayerView: void setFastForwardIncrementMs(int)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
android.support.v4.app.RemoteActionCompatParcelizer
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.google.android.exoplayer2.ui.PlayerControlView: void setShowMultiWindowTimeBar(boolean)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.AudioAttributesImplBaseParcelizer
com.google.android.exoplayer2.ui.PlayerControlView: void setShowRewindButton(boolean)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.android.exoplayer2.ui.PlayerView: void setCustomErrorMessage(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.android.exoplayer2.ui.StyledPlayerView: void setControllerHideDuringAds(boolean)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.android.exoplayer2.ui.StyledPlayerView: com.google.android.exoplayer2.ui.SubtitleView getSubtitleView()
com.google.android.exoplayer2.ui.StyledPlayerView: void setShutterBackgroundColor(int)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setTimeBarMinUpdateInterval(int)
com.google.android.exoplayer2.ui.StyledPlayerView: android.widget.FrameLayout getOverlayFrameLayout()
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.flutter.embedding.android.FlutterSurfaceView
com.google.android.exoplayer2.ui.PlayerControlView: int getShowTimeoutMs()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.work.InputMerger: InputMerger()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.work.impl.background.systemalarm.ConstraintProxy: ConstraintProxy()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.flutter.embedding.android.FlutterSplashView$SavedState
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowPreviousButton(boolean)
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.exoplayer2.ui.PlayerControlView: void setShowTimeoutMs(int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
com.google.android.exoplayer2.Format: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
com.google.android.exoplayer2.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()
com.google.android.exoplayer2.ui.PlayerControlView: void setRepeatToggleModes(int)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
com.google.android.exoplayer2.ui.StyledPlayerView: void setErrorMessageProvider(com.google.android.exoplayer2.util.ErrorMessageProvider)
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowRewindButton(boolean)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setControlDispatcher(com.google.android.exoplayer2.ControlDispatcher)
androidx.work.impl.background.systemalarm.RescheduleReceiver
android.support.v4.media.AudioAttributesImplApi26Parcelizer
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.work.WorkerParameters
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setShowSubtitleButton(boolean)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setAspectRatioListener(com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener)
com.google.android.exoplayer2.ui.StyledPlayerControlView: void setOnFullScreenModeChangedListener(com.google.android.exoplayer2.ui.StyledPlayerControlView$OnFullScreenModeChangedListener)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
com.example.multimedia.MainActivity
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.activity.ComponentActivity$3
com.google.android.exoplayer2.metadata.icy.IcyHeaders: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.StyledPlayerView: void setAspectRatioListener(com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
com.google.android.exoplayer2.metadata.mp4.SlowMotionData: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.flac.VorbisComment: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.PlayerControlView: void setShowPreviousButton(boolean)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.exoplayer2.ui.StyledPlayerView: void setShowBuffering(int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.room.RoomDatabase: RoomDatabase()
androidx.media.AudioAttributesImplApi26
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.PlayerControlView: void setRewindIncrementMs(int)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
android.support.v4.media.AudioAttributesCompatParcelizer
com.google.android.exoplayer2.ui.PlayerControlView: void setTimeBarMinUpdateInterval(int)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
com.jhomlala.better_player.ImageWorker
com.google.android.exoplayer2.ui.StyledPlayerView: void setKeepContentOnPlayerReset(boolean)
com.google.android.exoplayer2.ui.PlayerView: boolean getUseArtwork()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.android.exoplayer2.ui.PlayerView: void setResizeMode(int)
